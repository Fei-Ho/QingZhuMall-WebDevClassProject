<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springboot.dao.AuthorityMapper" >
  <resultMap id="BaseResultMap" type="com.springboot.bean.Authority" >
    <id column="idauthority" property="idauthority" jdbcType="INTEGER" />
    <result column="function" property="function" jdbcType="VARCHAR" />
    <result column="extend" property="extend" jdbcType="VARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from authority
    where idauthority = #{idauthority,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springboot.bean.Authority" >
    insert into authority (idauthority, `function`, extend
      )
    values (#{idauthority,jdbcType=INTEGER}, #{function,jdbcType=VARCHAR}, #{extend,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.springboot.bean.Authority" >
    update authority
    set `function` = #{function,jdbcType=VARCHAR},
      extend = #{extend,jdbcType=VARCHAR}
    where idauthority = #{idauthority,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select idauthority, `function`, extend
    from authority
    where idauthority = #{idauthority,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select idauthority, `function`, extend
    from authority
  </select>
</mapper>